name: CD

on:
  workflow_run:
    workflows: [ "CI" ]
    types: [ "completed" ]

permissions:
  contents: read
  packages: read
  pull-requests: write

jobs:
  mock_deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Find PR for this SHA
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.payload.workflow_run.head_sha;
            const { data } = await github.rest.search.issuesAndPullRequests({
              q: `repo:${context.repo.owner}/${context.repo.repo} type:pr is:open ${sha}`
            });
            const pr = data.items && data.items.length ? data.items[0] : null;
            core.setOutput('number', pr ? pr.number : '');
            core.setOutput('branch', context.payload.workflow_run.head_branch || '');

      - name: Compute image ref (sanitize)
        id: img
        shell: bash
        run: |
          set -euo pipefail

          raw_branch='${{ steps.pr.outputs.branch }}'
          if [ -z "$raw_branch" ]; then
            echo "Branch vacío desde workflow_run.head_branch"; exit 1
          fi

          # repo en minúsculas (GHCR exige lowercase)
          repo='${{ github.repository }}'
          repo_lc=$(echo "$repo" | tr '[:upper:]' '[:lower:]')

          # saneo del tag: minúsculas, reemplaza separadores inválidos por '-', filtra caracteres
          safe_branch=$(echo "$raw_branch" \
            | tr '[:upper:]' '[:lower:]' \
            | tr '/:@ ' '-' \
            | sed -E 's/[^a-z0-9._-]+/-/g' \
            | sed -E 's/^-+//; s/-+$//')

          image="ghcr.io/${repo_lc}:${safe_branch}"

          echo "::notice title=CD tag::raw='${raw_branch}' -> safe='${safe_branch}'"
          echo "image=${image}" >> "$GITHUB_OUTPUT"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        run: docker pull "${{ steps.img.outputs.image }}"

      - name: Run mock deployment
        run: docker run --rm "${{ steps.img.outputs.image }}" 2 3

      - name: Comment on PR
        if: ${{ steps.pr.outputs.number != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const number = Number('${{ steps.pr.outputs.number }}');
            const image = `${{ steps.img.outputs.image }}`;
            const body = `✅ CD: Despliegue simulado exitoso.\n\n- Imagen: \`${image}\`\n- Comando: \`docker run ${image} 2 3\``;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: number,
              body
            });
